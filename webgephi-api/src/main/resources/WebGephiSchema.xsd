<?xml version="1.0" encoding="UTF-8"?>
<xs:schema elementFormDefault="qualified"
           targetNamespace="http://www.webgephi.cz/v1/WebGephiSchema"
           version="1.0" xmlns:ns1="http://www.w3.org/2005/Atom"
           xmlns:tns="http://www.webgephi.cz/v1/WebGephiSchema"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:import namespace="http://www.w3.org/2005/Atom" schemaLocation="http://www.webgephi.cz/v1/ExtendedAtom"/>
    <xs:element name="error" type="tns:errorXml"/>
    <xs:element name="filter" type="tns:filterXml"/>
    <xs:element name="filters" type="tns:filtersXml"/>
    <xs:element name="function" type="tns:graphFunctionXml"/>
    <xs:element name="graph" type="tns:graphDetailXml"/>
    <xs:element name="graphs" type="tns:graphsXml"/>
    <xs:element name="layout" type="tns:layoutXml"/>
    <xs:element name="layouts" type="tns:layoutsXml"/>
    <xs:element name="ranking" type="tns:rankingXml"/>
    <xs:element name="rankings" type="tns:rankingsXml"/>
    <xs:element name="statistic" type="tns:statisticXml"/>
    <xs:element name="statistics" type="tns:statisticsXml"/>
    <xs:element name="user" type="tns:userXml"/>
    <xs:element name="users" type="tns:usersXml"/>
    <xs:complexType name="graphFunctionXml">
        <xs:sequence>
            <xs:choice minOccurs="0">
                <xs:element ref="tns:layout"/>
                <xs:element ref="tns:statistic"/>
                <xs:element ref="tns:ranking"/>
                <xs:element ref="tns:filter"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="layoutXml">
        <xs:complexContent>
            <xs:extension base="tns:abstractFunctionXml">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" ref="ns1:link"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="abstractFunctionXml">
        <xs:sequence>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="properties">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0"
                                    name="property" type="tns:propertyXml"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID"/>
    </xs:complexType>
    <xs:complexType name="propertyXml">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="ns1:link"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element name="value" type="tns:valueWrapper"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID" use="required"/>
    </xs:complexType>
    <xs:complexType name="valueWrapper">
        <xs:choice>
            <xs:element name="attribute" type="tns:attributePropertyValue"/>
            <xs:element name="nodeAttribute" type="tns:nodeAttributePropertyValue"/>
            <xs:element name="edgeAttribute" type="tns:edgeAttributePropertyValue"/>
            <xs:element name="boolean" type="tns:booleanPropertyValue"/>
            <xs:element name="color" type="tns:colorPropertyValue"/>
            <xs:element name="double" type="tns:doublePropertyValue"/>
            <xs:element name="float" type="tns:floatPropertyValue"/>
            <xs:element name="integer" type="tns:integerPropertyValue"/>
            <xs:element name="string" type="tns:stringPropertyValue"/>
            <xs:element name="range" type="tns:rangePropertyValue"/>
            <xs:element name="nodePartition" type="tns:nodePartitionPropertyValue"/>
            <xs:element name="edgePartition" type="tns:edgePartitionPropertyValue"/>
            <xs:element name="list" type="tns:listPropertyValue"/>
            <xs:element name="partitionSelect" type="tns:partitionSelectPropertyValue"/>
            <xs:element name="nodePartitionSelect" type="tns:nodePartitionSelectPropertyValue"/>
            <xs:element name="edgePartitionSelect" type="tns:edgePartitionSelectPropertyValue"/>
            <xs:element name="attributeRange" type="tns:attributeRangePropertyValue"/>
            <xs:element name="attributeValue" type="tns:attributeEqualsPropertyValue"/>
            <xs:element name="attributeBooleanValue" type="tns:attributeBooleanEqualsPropertyValue"/>
            <xs:element name="attributeStringValue" type="tns:attributeStringEqualsPropertyValue"/>
            <xs:element name="attributeNumberValue" type="tns:attributeNumberEqualsPropertyValue"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="attributePropertyValue">
        <xs:sequence/>
        <xs:attribute name="attributeId" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="nodeAttributePropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:attributePropertyValue">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="edgeAttributePropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:attributePropertyValue">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="booleanPropertyValue">
        <xs:sequence/>
        <xs:attribute name="value" type="xs:boolean" use="required"/>
    </xs:complexType>
    <xs:simpleType name="colorPropertyValue">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:complexType name="doublePropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:numberPropertyValue">
                <xs:sequence/>
                <xs:attribute name="value" type="xs:double" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType abstract="true" name="numberPropertyValue">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="floatPropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:numberPropertyValue">
                <xs:sequence/>
                <xs:attribute name="value" type="xs:float" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="integerPropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:numberPropertyValue">
                <xs:sequence/>
                <xs:attribute name="value" type="xs:int" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="stringPropertyValue">
        <xs:sequence/>
        <xs:attribute name="value" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="rangePropertyValue">
        <xs:sequence>
            <xs:element minOccurs="0" name="from" type="tns:numberPropertyValue"/>
            <xs:element name="to" type="tns:numberPropertyValue"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="nodePartitionPropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:partitionPropertyValue">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="partitionPropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:attributePropertyValue">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="edgePartitionPropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:partitionPropertyValue">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="listPropertyValue">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="partition" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="partitionSelectPropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:partitionPropertyValue">
                <xs:sequence>
                    <xs:element minOccurs="0" name="selected" type="tns:listPropertyValue"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="nodePartitionSelectPropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:partitionSelectPropertyValue">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="edgePartitionSelectPropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:partitionSelectPropertyValue">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="attributeRangePropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:attributePropertyValue">
                <xs:sequence>
                    <xs:element name="range" type="tns:rangePropertyValue"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="attributeEqualsPropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:attributePropertyValue">
                <xs:choice>
                    <xs:element name="double" type="tns:doublePropertyValue"/>
                    <xs:element name="float" type="tns:floatPropertyValue"/>
                    <xs:element name="integer" type="tns:integerPropertyValue"/>
                    <xs:element name="boolean" type="tns:booleanPropertyValue"/>
                    <xs:element name="string" type="tns:stringPropertyValue"/>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="attributeBooleanEqualsPropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:attributeEqualsPropertyValue">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="attributeStringEqualsPropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:attributeEqualsPropertyValue">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="attributeNumberEqualsPropertyValue">
        <xs:complexContent>
            <xs:extension base="tns:attributeEqualsPropertyValue">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="statisticXml">
        <xs:complexContent>
            <xs:extension base="tns:abstractFunctionXml">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" ref="ns1:link"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="rankingXml">
        <xs:complexContent>
            <xs:extension base="tns:abstractFunctionXml">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" ref="ns1:link"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="filterXml">
        <xs:complexContent>
            <xs:extension base="tns:abstractFunctionXml">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" ref="ns1:link"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="errorXml">
        <xs:sequence>
            <xs:element name="code" type="tns:code"/>
            <xs:element name="message" type="xs:string"/>
            <xs:element minOccurs="0" name="detail" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="code">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="number" type="xs:int" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="userXml">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="ns1:link"/>
            <xs:element minOccurs="0" name="firstName" type="xs:string"/>
            <xs:element minOccurs="0" name="lastName" type="xs:string"/>
            <xs:element minOccurs="0" name="email" type="xs:string"/>
            <xs:element minOccurs="0" name="password" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="username" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="usersXml">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="ns1:link"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:user"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="graphDetailXml">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="ns1:link"/>
            <xs:element minOccurs="0" name="created" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="parent" type="tns:graphDetailXml"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:long"/>
    </xs:complexType>
    <xs:complexType name="graphsXml">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="ns1:link"/>
            <xs:element ref="ns1:link"/>
            <xs:element ref="ns1:link"/>
            <xs:element ref="ns1:link"/>
            <xs:element ref="ns1:link"/>
            <xs:element ref="ns1:link"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:graph"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="layoutsXml">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="ns1:link"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:layout"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="statisticsXml">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="ns1:link"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:statistic"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="rankingsXml">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="ns1:link"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:ranking"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="filtersXml">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="ns1:link"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:filter"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
